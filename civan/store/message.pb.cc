// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: civan/store/message.proto

#include "civan/store/message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_civan_2fstore_2fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_civan_2fstore_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_entity_name_t;
}  // namespace protobuf_civan_2fstore_2fmessage_2eproto
namespace civan {
namespace store {
class entity_name_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<entity_name_t>
      _instance;
} _entity_name_t_default_instance_;
class msg_headerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg_header>
      _instance;
} _msg_header_default_instance_;
}  // namespace store
}  // namespace civan
namespace protobuf_civan_2fstore_2fmessage_2eproto {
static void InitDefaultsentity_name_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::civan::store::_entity_name_t_default_instance_;
    new (ptr) ::civan::store::entity_name_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::civan::store::entity_name_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_entity_name_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsentity_name_t}, {}};

static void InitDefaultsmsg_header() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::civan::store::_msg_header_default_instance_;
    new (ptr) ::civan::store::msg_header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::civan::store::msg_header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_msg_header =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmsg_header}, {
      &protobuf_civan_2fstore_2fmessage_2eproto::scc_info_entity_name_t.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_entity_name_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_msg_header.base);
}

}  // namespace protobuf_civan_2fstore_2fmessage_2eproto
namespace civan {
namespace store {
bool MSG_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void entity_name_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int entity_name_t::kTypeFieldNumber;
const int entity_name_t::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

entity_name_t::entity_name_t()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_civan_2fstore_2fmessage_2eproto::scc_info_entity_name_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:civan.store.entity_name_t)
}
entity_name_t::entity_name_t(const entity_name_t& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:civan.store.entity_name_t)
}

void entity_name_t::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(id_));
}

entity_name_t::~entity_name_t() {
  // @@protoc_insertion_point(destructor:civan.store.entity_name_t)
  SharedDtor();
}

void entity_name_t::SharedDtor() {
}

void entity_name_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const entity_name_t& entity_name_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_civan_2fstore_2fmessage_2eproto::scc_info_entity_name_t.base);
  return *internal_default_instance();
}


void entity_name_t::Clear() {
// @@protoc_insertion_point(message_clear_start:civan.store.entity_name_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool entity_name_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:civan.store.entity_name_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:civan.store.entity_name_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:civan.store.entity_name_t)
  return false;
#undef DO_
}

void entity_name_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:civan.store.entity_name_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:civan.store.entity_name_t)
}

size_t entity_name_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:civan.store.entity_name_t)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void entity_name_t::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const entity_name_t*>(&from));
}

void entity_name_t::MergeFrom(const entity_name_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:civan.store.entity_name_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void entity_name_t::CopyFrom(const entity_name_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:civan.store.entity_name_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool entity_name_t::IsInitialized() const {
  return true;
}

void entity_name_t::Swap(entity_name_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void entity_name_t::InternalSwap(entity_name_t* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string entity_name_t::GetTypeName() const {
  return "civan.store.entity_name_t";
}


// ===================================================================

void msg_header::InitAsDefaultInstance() {
  ::civan::store::_msg_header_default_instance_._instance.get_mutable()->src_ = const_cast< ::civan::store::entity_name_t*>(
      ::civan::store::entity_name_t::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_header::kSeqFieldNumber;
const int msg_header::kTidFieldNumber;
const int msg_header::kTypeFieldNumber;
const int msg_header::kPriorityFieldNumber;
const int msg_header::kVersionFieldNumber;
const int msg_header::kFrontLenFieldNumber;
const int msg_header::kMiddleLenFieldNumber;
const int msg_header::kDataLenFieldNumber;
const int msg_header::kDataOffFieldNumber;
const int msg_header::kSrcFieldNumber;
const int msg_header::kCompatVersionFieldNumber;
const int msg_header::kReservedFieldNumber;
const int msg_header::kCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_header::msg_header()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_civan_2fstore_2fmessage_2eproto::scc_info_msg_header.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:civan.store.msg_header)
}
msg_header::msg_header(const msg_header& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_src()) {
    src_ = new ::civan::store::entity_name_t(*from.src_);
  } else {
    src_ = NULL;
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(crc_));
  // @@protoc_insertion_point(copy_constructor:civan.store.msg_header)
}

void msg_header::SharedCtor() {
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&src_)) + sizeof(crc_));
}

msg_header::~msg_header() {
  // @@protoc_insertion_point(destructor:civan.store.msg_header)
  SharedDtor();
}

void msg_header::SharedDtor() {
  if (this != internal_default_instance()) delete src_;
}

void msg_header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const msg_header& msg_header::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_civan_2fstore_2fmessage_2eproto::scc_info_msg_header.base);
  return *internal_default_instance();
}


void msg_header::Clear() {
// @@protoc_insertion_point(message_clear_start:civan.store.msg_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && src_ != NULL) {
    delete src_;
  }
  src_ = NULL;
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(crc_));
  _internal_metadata_.Clear();
}

bool msg_header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:civan.store.msg_header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 seq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .civan.store.MSG_TYPE type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::civan::store::MSG_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 front_len = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &front_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 middle_len = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &middle_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_len = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_off = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_off_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .civan.store.entity_name_t src = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 compat_version = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compat_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reserved = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crc = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:civan.store.msg_header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:civan.store.msg_header)
  return false;
#undef DO_
}

void msg_header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:civan.store.msg_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 seq = 1;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq(), output);
  }

  // uint64 tid = 2;
  if (this->tid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tid(), output);
  }

  // .civan.store.MSG_TYPE type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // uint32 priority = 4;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->priority(), output);
  }

  // uint32 version = 5;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->version(), output);
  }

  // uint32 front_len = 6;
  if (this->front_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->front_len(), output);
  }

  // uint32 middle_len = 7;
  if (this->middle_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->middle_len(), output);
  }

  // uint32 data_len = 8;
  if (this->data_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->data_len(), output);
  }

  // uint32 data_off = 9;
  if (this->data_off() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->data_off(), output);
  }

  // .civan.store.entity_name_t src = 10;
  if (this->has_src()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_src(), output);
  }

  // uint32 compat_version = 11;
  if (this->compat_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->compat_version(), output);
  }

  // uint32 reserved = 12;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->reserved(), output);
  }

  // uint32 crc = 13;
  if (this->crc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->crc(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:civan.store.msg_header)
}

size_t msg_header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:civan.store.msg_header)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .civan.store.entity_name_t src = 10;
  if (this->has_src()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *src_);
  }

  // uint64 seq = 1;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq());
  }

  // uint64 tid = 2;
  if (this->tid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tid());
  }

  // .civan.store.MSG_TYPE type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 priority = 4;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->priority());
  }

  // uint32 version = 5;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 front_len = 6;
  if (this->front_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->front_len());
  }

  // uint32 middle_len = 7;
  if (this->middle_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->middle_len());
  }

  // uint32 data_len = 8;
  if (this->data_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_len());
  }

  // uint32 data_off = 9;
  if (this->data_off() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_off());
  }

  // uint32 compat_version = 11;
  if (this->compat_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compat_version());
  }

  // uint32 reserved = 12;
  if (this->reserved() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reserved());
  }

  // uint32 crc = 13;
  if (this->crc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg_header::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const msg_header*>(&from));
}

void msg_header::MergeFrom(const msg_header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:civan.store.msg_header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_src()) {
    mutable_src()->::civan::store::entity_name_t::MergeFrom(from.src());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.tid() != 0) {
    set_tid(from.tid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.front_len() != 0) {
    set_front_len(from.front_len());
  }
  if (from.middle_len() != 0) {
    set_middle_len(from.middle_len());
  }
  if (from.data_len() != 0) {
    set_data_len(from.data_len());
  }
  if (from.data_off() != 0) {
    set_data_off(from.data_off());
  }
  if (from.compat_version() != 0) {
    set_compat_version(from.compat_version());
  }
  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
  if (from.crc() != 0) {
    set_crc(from.crc());
  }
}

void msg_header::CopyFrom(const msg_header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:civan.store.msg_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_header::IsInitialized() const {
  return true;
}

void msg_header::Swap(msg_header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_header::InternalSwap(msg_header* other) {
  using std::swap;
  swap(src_, other->src_);
  swap(seq_, other->seq_);
  swap(tid_, other->tid_);
  swap(type_, other->type_);
  swap(priority_, other->priority_);
  swap(version_, other->version_);
  swap(front_len_, other->front_len_);
  swap(middle_len_, other->middle_len_);
  swap(data_len_, other->data_len_);
  swap(data_off_, other->data_off_);
  swap(compat_version_, other->compat_version_);
  swap(reserved_, other->reserved_);
  swap(crc_, other->crc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string msg_header::GetTypeName() const {
  return "civan.store.msg_header";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace store
}  // namespace civan
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::civan::store::entity_name_t* Arena::CreateMaybeMessage< ::civan::store::entity_name_t >(Arena* arena) {
  return Arena::CreateInternal< ::civan::store::entity_name_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::civan::store::msg_header* Arena::CreateMaybeMessage< ::civan::store::msg_header >(Arena* arena) {
  return Arena::CreateInternal< ::civan::store::msg_header >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
