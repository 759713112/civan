// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: civan/store/message.proto

#ifndef PROTOBUF_INCLUDED_civan_2fstore_2fmessage_2eproto
#define PROTOBUF_INCLUDED_civan_2fstore_2fmessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_civan_2fstore_2fmessage_2eproto 

namespace protobuf_civan_2fstore_2fmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_civan_2fstore_2fmessage_2eproto
namespace civan {
namespace store {
class entity_name_t;
class entity_name_tDefaultTypeInternal;
extern entity_name_tDefaultTypeInternal _entity_name_t_default_instance_;
class msg_header;
class msg_headerDefaultTypeInternal;
extern msg_headerDefaultTypeInternal _msg_header_default_instance_;
}  // namespace store
}  // namespace civan
namespace google {
namespace protobuf {
template<> ::civan::store::entity_name_t* Arena::CreateMaybeMessage<::civan::store::entity_name_t>(Arena*);
template<> ::civan::store::msg_header* Arena::CreateMaybeMessage<::civan::store::msg_header>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace civan {
namespace store {

enum MSG_TYPE {
  MSG_OSD_PING = 0,
  MSG_OSD_OP = 1,
  MSG_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MSG_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MSG_TYPE_IsValid(int value);
const MSG_TYPE MSG_TYPE_MIN = MSG_OSD_PING;
const MSG_TYPE MSG_TYPE_MAX = MSG_OSD_OP;
const int MSG_TYPE_ARRAYSIZE = MSG_TYPE_MAX + 1;

// ===================================================================

class entity_name_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:civan.store.entity_name_t) */ {
 public:
  entity_name_t();
  virtual ~entity_name_t();

  entity_name_t(const entity_name_t& from);

  inline entity_name_t& operator=(const entity_name_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  entity_name_t(entity_name_t&& from) noexcept
    : entity_name_t() {
    *this = ::std::move(from);
  }

  inline entity_name_t& operator=(entity_name_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const entity_name_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const entity_name_t* internal_default_instance() {
    return reinterpret_cast<const entity_name_t*>(
               &_entity_name_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(entity_name_t* other);
  friend void swap(entity_name_t& a, entity_name_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline entity_name_t* New() const final {
    return CreateMaybeMessage<entity_name_t>(NULL);
  }

  entity_name_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<entity_name_t>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const entity_name_t& from);
  void MergeFrom(const entity_name_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(entity_name_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:civan.store.entity_name_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_civan_2fstore_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_header : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:civan.store.msg_header) */ {
 public:
  msg_header();
  virtual ~msg_header();

  msg_header(const msg_header& from);

  inline msg_header& operator=(const msg_header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_header(msg_header&& from) noexcept
    : msg_header() {
    *this = ::std::move(from);
  }

  inline msg_header& operator=(msg_header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const msg_header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_header* internal_default_instance() {
    return reinterpret_cast<const msg_header*>(
               &_msg_header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(msg_header* other);
  friend void swap(msg_header& a, msg_header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_header* New() const final {
    return CreateMaybeMessage<msg_header>(NULL);
  }

  msg_header* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_header>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const msg_header& from);
  void MergeFrom(const msg_header& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .civan.store.entity_name_t src = 10;
  bool has_src() const;
  void clear_src();
  static const int kSrcFieldNumber = 10;
  private:
  const ::civan::store::entity_name_t& _internal_src() const;
  public:
  const ::civan::store::entity_name_t& src() const;
  ::civan::store::entity_name_t* release_src();
  ::civan::store::entity_name_t* mutable_src();
  void set_allocated_src(::civan::store::entity_name_t* src);

  // uint64 seq = 1;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // uint64 tid = 2;
  void clear_tid();
  static const int kTidFieldNumber = 2;
  ::google::protobuf::uint64 tid() const;
  void set_tid(::google::protobuf::uint64 value);

  // .civan.store.MSG_TYPE type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::civan::store::MSG_TYPE type() const;
  void set_type(::civan::store::MSG_TYPE value);

  // uint32 priority = 4;
  void clear_priority();
  static const int kPriorityFieldNumber = 4;
  ::google::protobuf::uint32 priority() const;
  void set_priority(::google::protobuf::uint32 value);

  // uint32 version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 front_len = 6;
  void clear_front_len();
  static const int kFrontLenFieldNumber = 6;
  ::google::protobuf::uint32 front_len() const;
  void set_front_len(::google::protobuf::uint32 value);

  // uint32 middle_len = 7;
  void clear_middle_len();
  static const int kMiddleLenFieldNumber = 7;
  ::google::protobuf::uint32 middle_len() const;
  void set_middle_len(::google::protobuf::uint32 value);

  // uint32 data_len = 8;
  void clear_data_len();
  static const int kDataLenFieldNumber = 8;
  ::google::protobuf::uint32 data_len() const;
  void set_data_len(::google::protobuf::uint32 value);

  // uint32 data_off = 9;
  void clear_data_off();
  static const int kDataOffFieldNumber = 9;
  ::google::protobuf::uint32 data_off() const;
  void set_data_off(::google::protobuf::uint32 value);

  // uint32 compat_version = 11;
  void clear_compat_version();
  static const int kCompatVersionFieldNumber = 11;
  ::google::protobuf::uint32 compat_version() const;
  void set_compat_version(::google::protobuf::uint32 value);

  // uint32 reserved = 12;
  void clear_reserved();
  static const int kReservedFieldNumber = 12;
  ::google::protobuf::uint32 reserved() const;
  void set_reserved(::google::protobuf::uint32 value);

  // uint32 crc = 13;
  void clear_crc();
  static const int kCrcFieldNumber = 13;
  ::google::protobuf::uint32 crc() const;
  void set_crc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:civan.store.msg_header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::civan::store::entity_name_t* src_;
  ::google::protobuf::uint64 seq_;
  ::google::protobuf::uint64 tid_;
  int type_;
  ::google::protobuf::uint32 priority_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 front_len_;
  ::google::protobuf::uint32 middle_len_;
  ::google::protobuf::uint32 data_len_;
  ::google::protobuf::uint32 data_off_;
  ::google::protobuf::uint32 compat_version_;
  ::google::protobuf::uint32 reserved_;
  ::google::protobuf::uint32 crc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_civan_2fstore_2fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// entity_name_t

// uint32 type = 1;
inline void entity_name_t::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 entity_name_t::type() const {
  // @@protoc_insertion_point(field_get:civan.store.entity_name_t.type)
  return type_;
}
inline void entity_name_t::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:civan.store.entity_name_t.type)
}

// uint32 id = 2;
inline void entity_name_t::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 entity_name_t::id() const {
  // @@protoc_insertion_point(field_get:civan.store.entity_name_t.id)
  return id_;
}
inline void entity_name_t::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:civan.store.entity_name_t.id)
}

// -------------------------------------------------------------------

// msg_header

// uint64 seq = 1;
inline void msg_header::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_header::seq() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.seq)
  return seq_;
}
inline void msg_header::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.seq)
}

// uint64 tid = 2;
inline void msg_header::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_header::tid() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.tid)
  return tid_;
}
inline void msg_header::set_tid(::google::protobuf::uint64 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.tid)
}

// .civan.store.MSG_TYPE type = 3;
inline void msg_header::clear_type() {
  type_ = 0;
}
inline ::civan::store::MSG_TYPE msg_header::type() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.type)
  return static_cast< ::civan::store::MSG_TYPE >(type_);
}
inline void msg_header::set_type(::civan::store::MSG_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.type)
}

// uint32 priority = 4;
inline void msg_header::clear_priority() {
  priority_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::priority() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.priority)
  return priority_;
}
inline void msg_header::set_priority(::google::protobuf::uint32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.priority)
}

// uint32 version = 5;
inline void msg_header::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::version() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.version)
  return version_;
}
inline void msg_header::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.version)
}

// uint32 front_len = 6;
inline void msg_header::clear_front_len() {
  front_len_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::front_len() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.front_len)
  return front_len_;
}
inline void msg_header::set_front_len(::google::protobuf::uint32 value) {
  
  front_len_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.front_len)
}

// uint32 middle_len = 7;
inline void msg_header::clear_middle_len() {
  middle_len_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::middle_len() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.middle_len)
  return middle_len_;
}
inline void msg_header::set_middle_len(::google::protobuf::uint32 value) {
  
  middle_len_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.middle_len)
}

// uint32 data_len = 8;
inline void msg_header::clear_data_len() {
  data_len_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::data_len() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.data_len)
  return data_len_;
}
inline void msg_header::set_data_len(::google::protobuf::uint32 value) {
  
  data_len_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.data_len)
}

// uint32 data_off = 9;
inline void msg_header::clear_data_off() {
  data_off_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::data_off() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.data_off)
  return data_off_;
}
inline void msg_header::set_data_off(::google::protobuf::uint32 value) {
  
  data_off_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.data_off)
}

// .civan.store.entity_name_t src = 10;
inline bool msg_header::has_src() const {
  return this != internal_default_instance() && src_ != NULL;
}
inline void msg_header::clear_src() {
  if (GetArenaNoVirtual() == NULL && src_ != NULL) {
    delete src_;
  }
  src_ = NULL;
}
inline const ::civan::store::entity_name_t& msg_header::_internal_src() const {
  return *src_;
}
inline const ::civan::store::entity_name_t& msg_header::src() const {
  const ::civan::store::entity_name_t* p = src_;
  // @@protoc_insertion_point(field_get:civan.store.msg_header.src)
  return p != NULL ? *p : *reinterpret_cast<const ::civan::store::entity_name_t*>(
      &::civan::store::_entity_name_t_default_instance_);
}
inline ::civan::store::entity_name_t* msg_header::release_src() {
  // @@protoc_insertion_point(field_release:civan.store.msg_header.src)
  
  ::civan::store::entity_name_t* temp = src_;
  src_ = NULL;
  return temp;
}
inline ::civan::store::entity_name_t* msg_header::mutable_src() {
  
  if (src_ == NULL) {
    auto* p = CreateMaybeMessage<::civan::store::entity_name_t>(GetArenaNoVirtual());
    src_ = p;
  }
  // @@protoc_insertion_point(field_mutable:civan.store.msg_header.src)
  return src_;
}
inline void msg_header::set_allocated_src(::civan::store::entity_name_t* src) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete src_;
  }
  if (src) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      src = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, src, submessage_arena);
    }
    
  } else {
    
  }
  src_ = src;
  // @@protoc_insertion_point(field_set_allocated:civan.store.msg_header.src)
}

// uint32 compat_version = 11;
inline void msg_header::clear_compat_version() {
  compat_version_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::compat_version() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.compat_version)
  return compat_version_;
}
inline void msg_header::set_compat_version(::google::protobuf::uint32 value) {
  
  compat_version_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.compat_version)
}

// uint32 reserved = 12;
inline void msg_header::clear_reserved() {
  reserved_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::reserved() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.reserved)
  return reserved_;
}
inline void msg_header::set_reserved(::google::protobuf::uint32 value) {
  
  reserved_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.reserved)
}

// uint32 crc = 13;
inline void msg_header::clear_crc() {
  crc_ = 0u;
}
inline ::google::protobuf::uint32 msg_header::crc() const {
  // @@protoc_insertion_point(field_get:civan.store.msg_header.crc)
  return crc_;
}
inline void msg_header::set_crc(::google::protobuf::uint32 value) {
  
  crc_ = value;
  // @@protoc_insertion_point(field_set:civan.store.msg_header.crc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace store
}  // namespace civan

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::civan::store::MSG_TYPE> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_civan_2fstore_2fmessage_2eproto
